""" Julian's VIMRC File

""" 1. Formatting Stuff

set number relativenumber
set tabstop=2
set shiftwidth=0
set termguicolors
"set cursorline
"set cursorcolumn
syntax on
set re=0 """ Solves a syntax highlighting bug here: https://github.com/prabirshrestha/vim-lsp/issues/786
let &t_SI = "\e[5 q"
let &t_EI = "\e[2 q"
set wildmode=longest,list,full

" This is necessary for VimTeX to load properly. The "indent" is optional.
" Note: Most plugin managers will do this automatically!
filetype plugin indent on

" This enables Vim's and neovim's syntax-related features. Without this, some
" VimTeX features will not work (see ":help vimtex-requirements" for more
" info).
" Note: Most plugin managers will do this automatically!
syntax enable

" Viewer options: One may configure the viewer either by specifying a built-in
" viewer method:
let g:vimtex_view_method = 'zathura'

" Or with a generic interface:
let g:vimtex_view_general_viewer = 'okular'
let g:vimtex_view_general_options = '--unique file:@pdf\#src:@line@tex'

" VimTeX uses latexmk as the default compiler backend. If you use it, which is
" strongly recommended, you probably don't need to configure anything. If you
" want another compiler backend, you can change it as follows. The list of
" supported backends and further explanation is provided in the documentation,
" see ":help vimtex-compiler".
let g:vimtex_compiler_method = 'latexrun'

" Most VimTeX mappings rely on localleader and this can be changed with the
" following line. The default is usually fine and is the symbol "\".
let maplocalleader = ","

function! Netrw_mappings()
  
  """ Moving through netrw with h and l keys
  nmap <buffer> h -^
  nmap <buffer> l <CR>

  """ Swapping Splits
  nmap <C-h> <C-w>h
  nmap <C-j> <C-w>j
  nmap <C-k> <C-w>k
  nmap <C-l> <C-w>l

  """ Swap j and k keys for navigation
  noremap k j|noremap <C-w>k <C-w>j|noremap <C-w><C-k> <C-w>j
  noremap j k|noremap <C-w>j <C-w>k|noremap <C-w><C-j> <C-w>k
  noremap ' :call OpenToRight()<cr>

endfunction


  cnoreabbrev <expr> tn getcmdtype() == ":" && getcmdline() == 'tn' ? 'tabnew' : 'tn'


